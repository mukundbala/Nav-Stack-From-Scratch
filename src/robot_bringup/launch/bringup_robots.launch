<?xml version="1.0"?>
<launch>
    <arg name="turtle_namespace" default="turtle"/>
    <arg name="drone_namespace"  default="hector"/>
    <arg name="project" default="$(env TASK)"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find robot_bringup)/worlds/$(env WORLD)/$(env WORLD).world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="false"/>
        <arg name="headless" value="true"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- MODE 1: SOLO TURTLE-->
    <group if="$(eval project == 'mode1')">
        <group ns="$(arg turtle_namespace)">
            <param name = "robot_description" command="$(find xacro)/xacro $(find robot_bringup)/urdf/turtlebot3_burger.urdf.xacro tf_prefix:=turtle"/>
            <node pkg="gazebo_ros" type="spawn_model" name="spawn_turtle"  
                args="-urdf -model turtlebot3_burger -x $(env TURTLE_X) -y $(env TURTLE_Y) -z 0.002 -param /turtle/robot_description"
                respawn="false" output="screen" /> 
            
            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="turtle" />
            </node>
        </group>
        <node pkg="tf" type="static_transform_publisher" name="world_to_turtle_tf_broadcaster"  args="0 0 0 0 0 0 /world /turtle/odom 100"/>
    </group>

    <!-- MODE 2: SOLO HECTOR-->
    <group if="$(eval project == 'mode2')">
    <!-- spawn hector -->
        <group ns="$(arg drone_namespace)">
            <!-- spawn the model -->
            <include file="$(find robot_bringup)/launch/spawn_quadrotor.launch">
                <arg name="tf_prefix" value="hector"/>
                <arg name="name" value="hector"/>
                <arg name="x" value="$(env HECTOR_X)"/>
                <arg name="y" value="$(env HECTOR_Y)"/>
                <arg name="z" value="$(env HECTOR_Z)"/>
                <arg name="use_ground_truth_for_tf" value="true" />
                <arg name="use_ground_truth_for_control" value="true" />\
            </include>
        </group>
        <!-- merge tf trees -->
        <node pkg="tf" type="static_transform_publisher" name="world_to_hector_tf_broadcaster"  args="0 0 0 0 0 0 /world /hector/world 100"/>
    </group>

    <!-- MODE 3: CO_OP TURTLE + HECTOR-->
    <group if="$(eval project == 'mode3')">
    <!-- spawn hector -->
        <group ns="$(arg drone_namespace)">
            
            <include file="$(find robot_bringup)/launch/spawn_quadrotor.launch">
                <arg name="tf_prefix" value="hector"/>
                <arg name="name" value="hector"/>
                <arg name="x" value="$(env HECTOR_X)"/>
                <arg name="y" value="$(env HECTOR_Y)"/>
                <arg name="z" value="$(env HECTOR_Z)"/>
                <arg name="use_ground_truth_for_tf" value="true" />
                <arg name="use_ground_truth_for_control" value="true" />
            </include>
        </group>

    <!-- spawn turtle -->
        <group ns="$(arg turtle_namespace)">
            <param name = "robot_description" command="$(find xacro)/xacro $(find robot_bringup)/urdf/turtlebot3_burger_proj2.urdf.xacro tf_prefix:=turtle" /><!-- yk: added tf_prefix into urdf-->
            <node pkg="gazebo_ros" type="spawn_model" name="spawn_turtle"  
                args="-urdf -model turtlebot3_burger -x $(env TURTLE_X) -y $(env TURTLE_Y) -z 0.002 -param /turtle/robot_description"
                respawn="false" output="screen" /> 
            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="turtle" />
            </node>
        </group>

        <node pkg="tf" type="static_transform_publisher" name="world_to_turtle_tf_broadcaster"  args="0 0 0 0 0 0 /world /turtle/odom 100"/>
        <node pkg="tf" type="static_transform_publisher" name="world_to_hector_tf_broadcaster"  args="0 0 0 0 0 0 /world /hector/world 100"/>
    </group> 

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_bringup)/rviz/$(env TASK).rviz"/>   
</launch>
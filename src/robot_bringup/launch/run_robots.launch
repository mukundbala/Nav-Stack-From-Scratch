<?xml version="1.0"?>
<launch>
    <arg name="turtle_namespace" default="turtle"/>
    <arg name="drone_namespace"  default="hector"/>
    <arg name="mode" default="$(env TASK)"/>

    <!-- MODE 1: SOLO TURTLE-->
    <group if="$(eval mode == 'mode1')">
        <group ns="$(arg turtle_namespace)">
        <!-- Params -->
            <rosparam command="load" file="$(find robot_bringup)/worlds/$(env WORLD)/$(env WORLD)_tgoals.yaml"/>
            <rosparam command="load" file="$(find robot_bringup)/config/core_turtle_config.yaml"/>

            <param name="initial_x" value="$(env TURTLE_X)" type="double"/>
            <param name="initial_y" value="$(env TURTLE_Y)" type="double"/>
            <param name="min_x" value="$(env TURTLE_MIN_X)" type="double"/>
            <param name="min_y" value="$(env TURTLE_MIN_Y)" type="double"/>
            <param name="max_x" value="$(env TURTLE_MAX_X)" type="double"/>
            <param name="max_y" value="$(env TURTLE_MAX_Y)" type="double"/>
            <param name="trigger_nodes" value="true" type="bool"/>
            
            <!-- Nodes -->
            <node pkg="loco_mapping" type="motion_filter_node" name="motion_filter" output="screen"/>
            <node pkg="loco_mapping" type="occupancy_grid_node" name="occupancy_grid" output="screen"/>
            <node pkg="navigator" type="navigator_node" name="navigator" output="screen"/>
            <node pkg="mission_planner" type="mission_planner_node" name="mission_planner" output="screen"/>
            <node pkg="global_planner" type="global_planner_node" name="global_planner" output="screen"/>
            <node pkg="commander" type="commander_node" name="commander" output="screen"/>
        </group>
    </group>

    <!-- MODE 2: SOLO HECTOR-->
    <group if="$(eval mode == 'mode2')">
        <group ns = "$(arg drone_namespace)">
            <param name="initial_x" value="$(env HECTOR_X)" type="double"/>
            <param name="initial_y" value="$(env HECTOR_Y)" type="double"/>
            <param name="initial_z" value="$(env HECTOR_Z)" type="double"/>
            <rosparam command="load" file="$(find robot_bringup)/worlds/$(env WORLD)/$(env WORLD)_hgoals.yaml"/>
            <rosparam command="load" file="$(find robot_bringup)/config/core_hector_config.yaml"/>

            <param name="run" value="true" type="bool"/>
            <node pkg="drone_commander" type="drone_commander_node" name="drone_commander" output="screen" />
            <node pkg="drone_ins" type="drone_ins" name="drone_ins" output="screen" />
        </group>
    </group>

    <!-- MODE 3: CO_OP TURTLE + HECTOR-->
    <group if="$(eval mode == 'mode3')">
        <group ns = "$(arg drone_namespace)">
            <param name="initial_x" value="$(env HECTOR_X)" type="double"/>
            <param name="initial_y" value="$(env HECTOR_Y)" type="double"/>
            <param name="initial_z" value="$(env HECTOR_Z)" type="double"/>
            <rosparam command="load" file="$(find robot_bringup)/worlds/$(env WORLD)/$(env WORLD)_hgoals.yaml"/>
            <rosparam command="load" file="$(find robot_bringup)/config/core_hector_config.yaml"/>
            <param name="run" value="true" type="bool"/>
            <node pkg="drone_commander" type="drone_commander_node" name="drone_commander" output="screen" />
            <node pkg="drone_ins" type="drone_ins" name="drone_ins" output="screen" />
        </group>

        <group ns="$(arg turtle_namespace)">
        <!-- Params -->
            <rosparam command="load" file="$(find robot_bringup)/worlds/$(env WORLD)/$(env WORLD)_tgoals.yaml"/>
            <rosparam command="load" file="$(find robot_bringup)/config/core_turtle_config.yaml"/>
            <param name="initial_x" value="$(env TURTLE_X)" type="double"/>
            <param name="initial_y" value="$(env TURTLE_Y)" type="double"/>
            <param name="min_x" value="$(env TURTLE_MIN_X)" type="double"/>
            <param name="min_y" value="$(env TURTLE_MIN_Y)" type="double"/>
            <param name="max_x" value="$(env TURTLE_MAX_X)" type="double"/>
            <param name="max_y" value="$(env TURTLE_MAX_Y)" type="double"/>
            <param name="trigger_nodes" value="true" type="bool"/>
            
            <!-- Nodes -->
            <node pkg="loco_mapping" type="motion_filter_node" name="motion_filter" output="screen"/>
            <node pkg="loco_mapping" type="occupancy_grid_node" name="occupancy_grid" output="screen"/>
            <node pkg="navigator" type="navigator_node" name="navigator" output="screen"/>
            <node pkg="mission_planner" type="mission_planner_node" name="mission_planner" output="screen"/>
            <node pkg="global_planner" type="global_planner_node" name="global_planner" output="screen"/>
            <node pkg="commander" type="commander_node" name="commander" output="screen"/>
        </group>
    </group>    
</launch>